# Generated by Django 5.2.4 on 2025-08-07 00:23

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataHorario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('data_horario', models.DateTimeField(verbose_name='Data')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('cpf', models.CharField(help_text='Digite o CPF no formato: XXX.XXX.XXX-XX', max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='O CPF deve estar no formato: XXX.XXX.XXX-XX', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('celular', models.CharField(help_text='Digite o número do celular dentro do padrão (XX) XXXXX-XXXX', max_length=15, validators=[django.core.validators.RegexValidator(message='O número de celular deve estar no formato: (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\) \\d{5}-\\d{4}$')], verbose_name='Celular com DDD')),
            ],
            options={
                'verbose_name': 'Pessoa',
                'verbose_name_plural': 'Pessoas',
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('nome_servico', models.CharField(max_length=100, verbose_name='Nome do serviço')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Valor')),
                ('duracao_minutos', models.PositiveIntegerField(default=30, verbose_name='Duração em Minutos')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('pessoa', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='agendamento.pessoa', verbose_name='Pessoa')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('pessoa', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='agendamento.pessoa', verbose_name='Pessoa')),
                ('servico', models.ManyToManyField(to='agendamento.servico', verbose_name='Serviços que Executa')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServicoFuncionarioHorario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('data_horario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agendamento.datahorario', verbose_name='Data')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agendamento.funcionario', verbose_name='Funcionario')),
                ('servico', models.ManyToManyField(to='agendamento.servico', verbose_name='Serviço(s)')),
            ],
            options={
                'verbose_name': 'Vaga de Atendimento',
                'verbose_name_plural': 'Vagas de Atendimento',
                'unique_together': {('funcionario', 'data_horario')},
            },
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('status', models.CharField(choices=[('AGENDADO', 'Agendado'), ('CONCLUIDO', 'Concluído'), ('CANCELADO', 'Cancelado')], default='AGENDADO', max_length=20, verbose_name='Status')),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='agendamento.cliente', verbose_name='Cliente')),
                ('servico_funcionario_horario', models.OneToOneField(default=None, on_delete=django.db.models.deletion.PROTECT, to='agendamento.servicofuncionariohorario', verbose_name='Vaga de Atendimento')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
